import java.io.*;
import java.util.*;

public class Main {

    private static long getResult(long a, long b, long c) {
        long min = Math.min(Math.min(a, b), c);
        return a * a + b * b + c * c + 7 * min;
    }

    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());

        StringBuilder sb = new StringBuilder();

        for (int i = 0; i < n; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());

            long a = Long.parseLong(st.nextToken());
            long b = Long.parseLong(st.nextToken());
            long c = Long.parseLong(st.nextToken());
            long wildcard = Long.parseLong(st.nextToken());

            long[] tokens = {a, b, c};
            Arrays.sort(tokens);

            // a <= b <= c 순으로 정렬됨
            long maxScore = getResult(tokens[0], tokens[1], tokens[2]);

            for (long j = 0; j <= Math.min(wildcard, tokens[1] - tokens[0]); j++) {
                // 와일드카드 분배: 가장 작은 두 값에 추가
                long currentScore = getResult(tokens[0] + j, tokens[1], tokens[2] + (wildcard - j));
                maxScore = Math.max(maxScore, currentScore);
            }

            sb.append(maxScore).append("\n");
        }

        System.out.print(sb);
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}