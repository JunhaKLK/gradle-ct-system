import java.io.*;
import java.util.Arrays;

public class Main {

    // https://www.acmicpc.net/problem/1747

    private static boolean isPal(int n) {
        char[] chars = Integer.toString(n).toCharArray();

        for (int i = 0; i < chars.length; i++) {
            if (chars[i] != chars[chars.length - 1 - i]) {
                return false;
            }
        }

        return true;
    }

    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int n = Integer.parseInt(br.readLine());
        boolean[] isPrime = new boolean[2000000];
        Arrays.fill(isPrime, true);
        isPrime[0] = false;
        isPrime[1] = false;

        for (int base = 2; base <= Math.sqrt(isPrime.length); base++) {
            if (!isPrime[base]) continue;

            for (int powerCount = 2; base * powerCount < isPrime.length; powerCount++) {
                int po = base * powerCount;
                isPrime[po] = false;
            }
        }

        for (int i = n; i < isPrime.length; i++) {
            if (isPrime[i] && isPal(i)) {
                bw.write(Integer.toString(i));
                break;
            }
        }

        bw.flush();
        br.close();
        bw.close();
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}
