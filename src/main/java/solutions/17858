import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class Main {

    // https://www.acmicpc.net/problem/17858

    private static boolean annBinarySearch(List<Long> list, long target) {
        int left = 0;
        int right = list.size() - 1;

        while (left <= right) {
            int mid = (left + right) / 2;

            if (list.get(mid) == target) {
                return true;
            } else if (list.get(mid) > target) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }

        return false;
    }

    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(st.nextToken());
        long m = Long.parseLong(st.nextToken());
        long a = Long.parseLong(st.nextToken());
        long c = Long.parseLong(st.nextToken());
        long x0 = Long.parseLong(st.nextToken());

        List<Long> generated = new ArrayList<>();
        generated.add((a * x0 + c) % m);

        for (int i = 1; i < n; i++) {
            generated.add((a * generated.get(i - 1) + c) % m);
        }

        int count = 0;
        for (long num : generated) {
            if (annBinarySearch(generated, num)) {
                count++;
            }
        }

        bw.write(Integer.toString(count));

        bw.flush();
        bw.close();
        br.close();
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}
