import java.io.*;
import java.util.*;

public class Main {

    //https://www.acmicpc.net/problem/15728

    private static List<int[]> clear(List<int[]> list, Integer card) {
        List<int[]> result = new ArrayList<>();

        for (int[] integers : list) {
            if (integers[2] != card) {
                result.add(integers);
            }
        }

        return result;
    }

    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(st.nextToken());
        int k = Integer.parseInt(st.nextToken());

        List<int[]> list = new ArrayList<>();

        int[] inA = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::parseInt).toArray();
        int[] inB = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::parseInt).toArray();

        for (int i = 0; i < inA.length; i++) {
            for (int j = 0; j < inB.length; j++) {
                list.add(new int[]{inA[i] * inB[j], inA[i], inB[j]});
            }
        }

        list.sort(Comparator.comparingInt((int[] x) -> x[0]).reversed());

        for (int i = 0; i < k; i++) {
            Integer removeTarget = list.get(0)[2];
            list = clear(list, removeTarget);
        }

        bw.write(Integer.toString(list.get(0)[0]));

        bw.newLine();
        bw.close();
        br.close();
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}