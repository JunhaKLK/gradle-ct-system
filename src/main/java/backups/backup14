import java.io.*;
import java.util.*;

public class Main {

    // https://www.acmicpc.net/problem/24446

    public static class Node {
        public Node() {
            isVisited = false;
            linkedNodes = new ArrayList<>();
            depth = -1;
        }

        boolean isVisited;
        List<Node> linkedNodes;
        int depth;
    }

    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());
        int r = Integer.parseInt(st.nextToken());

        List<Node> nodes = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            nodes.add(new Node());
        }

        for (int i = 0; i < m; i++) {
            String[] strings = br.readLine().split(" ");
            int u = Integer.parseInt(strings[0]) - 1;
            int v = Integer.parseInt(strings[1]) - 1;

            nodes.get(u).linkedNodes.add(nodes.get(v));
            nodes.get(v).linkedNodes.add(nodes.get(u));
        }

        Queue<Node> queue = new ArrayDeque<>();
        nodes.get(r - 1).isVisited = true;
        nodes.get(r - 1).depth = 0;
        queue.add(nodes.get(r - 1));

        while (!queue.isEmpty()) {
            Node nextNode = queue.poll();

            for (Node linkedNode : nextNode.linkedNodes) {
                if (!linkedNode.isVisited) {
                    linkedNode.isVisited = true;
                    queue.add(linkedNode);
                    linkedNode.depth = nextNode.depth + 1;
                }
            }
        }

        StringBuilder sb =new StringBuilder();

        for (Node node : nodes) {
            sb.append(node.depth).append("\n");
        }

        bw.write(sb.toString().trim());

        bw.flush();
        br.close();
        bw.close();
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}