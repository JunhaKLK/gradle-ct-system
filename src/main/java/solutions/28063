import java.io.*;
import java.util.*;

public class Main {

    // https://www.acmicpc.net/problem/28063

    private static int getCount(int r, int c, int n) {
        if (n == 1) {
            return 0;
        } else if (isCorner(r, c, n)) {
            return 2;
        } else if (isEdge(r, c, n)) {
            return 3;
        } else {
            return 4;
        }
    }

    private static boolean isCorner(int r, int c, int n) {
        return (r == 0 || r == n - 1) && (c == 0 || c == n - 1);
    }

    private static boolean isEdge(int r, int c, int n) {
        return (r == 0 || r == n - 1) || (c == 0 || c == n - 1);
    }

    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int n = Integer.parseInt(br.readLine());

        StringTokenizer st = new StringTokenizer(br.readLine());

        int col = Integer.parseInt(st.nextToken()) - 1;
        int row = Integer.parseInt(st.nextToken()) - 1;

        bw.write(Integer.toString(getCount(row, col, n)));

        bw.flush();
        br.close();
        bw.close();
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}