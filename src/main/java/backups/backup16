import java.io.*;
import java.util.Arrays;

public class Main {

    // https://www.acmicpc.net/problem/25369

    private static long multiplyEachDigits(int[] arr) {
        long mult = arr[0];
        for (int i = 1; i < arr.length; i++) {
            mult *= arr[i];
        }
        return mult;
    }

    private static long multiplyEachDigits(int v) {
        long mult = 1;

        while (v > 0) {
            mult *= v % 10;
            v /= 10;
        }

        return mult;
    }

    private static boolean hasZero(int v) {
        while (v > 0) {
            if (v % 10 == 0) {
                return true;
            }

            v /= 10;
        }

        return false;
    }

    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int n = Integer.parseInt(br.readLine());

        int[] arr = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::parseInt).toArray();
        long a = multiplyEachDigits(arr);

        int max = (int) Math.pow(10, n);

        long minMult = -1;
        int min = -1;

        for (int index = (int) Math.pow(10, n - 1); index < max; index++) {
            if (hasZero(index)) {
                continue;
            }

            long multiplied = multiplyEachDigits(index);

            if (a < multiplied) {
                if (min == -1) {
                    min = index;
                    minMult = multiplied;
                } else {
                    if (minMult > multiplied) {
                        min = index;
                        minMult = multiplied;
                    }
                }
            }
        }

        if (min == -1) {
            bw.write(Integer.toString(min));
        } else {
            char[] chars = Integer.toString(min).toCharArray();
            StringBuilder sb  = new StringBuilder();

            for (int i = 0; i < chars.length; i++) {
                sb.append(chars[i]).append(" ");
            }

            bw.write(sb.toString().trim());
        }

        bw.flush();
        br.close();
        bw.close();
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}