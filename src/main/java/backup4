import java.io.*;
import java.util.StringTokenizer;

public class Main {

    // https://www.acmicpc.net/problem/18422

    private static boolean isValid(boolean[][] b, int r, int c) {
        if (r < 0) return false;
        if (c < 0) return false;
        if (r >= b.length) return false;
        if (c >= b[r].length) return false;

        return b[r][c];
    }

    private static void traverse(boolean[][] b, int r, int c) {
        int[] rowAdder = {-1, 0, 1, 0};
        int[] colAdder = {0, 1, 0, -1};

        b[r][c] = false;

        for (int i = 0; i < 4; i++) {
            if (isValid(b, r + rowAdder[i], c + colAdder[i])) {
                traverse(b, r + rowAdder[i], c + colAdder[i]);
            }
        }
    }

    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());

        boolean[][] b = new boolean[n][m];

        for (int i = 0; i < n; i++) {
            char[] chars = br.readLine().toCharArray();
            for (int j = 0; j < m; j++) {
                b[i][j] = chars[j] == '*';
            }
        }

        int result = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (b[i][j]) {
                    ++result;
                    traverse(b, i, j);
                }
            }
        }

        bw.write(Integer.toString(result));

        bw.newLine();
        bw.close();
        br.close();
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}