import java.io.*;
import java.util.*;

public class Main {

    // https://www.acmicpc.net/problem/11370

    private static boolean isValid(boolean[][] booleans, int r, int c) {
        if (r < 0) return false;
        if (c < 0) return false;
        if (r >= booleans.length) return false;
        if (c >= booleans[r].length) return false;

        return booleans[r][c];
    }

    private static int[] rowAdder = {-1, 0, 1, 0};
    private static int[] colAdder = {0, 1, 0, -1};

    private static void spread(boolean[][] isMoveable, int r, int c) {
        isMoveable[r][c] = false;

        for (int i = 0; i < 4; i++) {
            int newRow = r + rowAdder[i];
            int newCol = c + colAdder[i];

            if (isValid(isMoveable, newRow, newCol)) {
                spread(isMoveable, newRow, newCol);
            }
        }
    }

    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        String size = br.readLine();

        StringBuilder sb = new StringBuilder();

        while (!"0 0".equals(size)) {
            StringTokenizer st = new StringTokenizer(size);

            int w = Integer.parseInt(st.nextToken());
            int h = Integer.parseInt(st.nextToken());

            boolean[][] booleans = new boolean[h][w];
            boolean[][] isDot = new boolean[h][w];

            List<int[]> initialSpiderPos = new ArrayList<>();

            for (int i = 0; i < h; i++) {
                char[] chars = br.readLine().toCharArray();

                for (int j = 0; j < chars.length; j++) {
                    if (chars[j] == 'T') {
                        booleans[i][j] = true;
                    } else if (chars[j] == 'S') {
                        initialSpiderPos.add(new int[] {i, j});
                    } else {
                        isDot[i][j] = true;
                    }
                }
            }

            for (int[] spiderPos : initialSpiderPos) {
                spread(booleans, spiderPos[0], spiderPos[1]);
            }

            for (int i = 0; i < h; i++) {
                for (int j = 0; j < w; j++) {
                    if (isDot[i][j]) {
                        sb.append(".");
                        continue;
                    }

                    if (booleans[i][j]){
                        sb.append("T");
                    } else {
                        sb.append("S");
                    }
                }

                sb.append("\n");
            }

            size = br.readLine();
        }

        bw.write(sb.toString().trim());

        bw.flush();
        br.close();
        bw.close();
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}