import java.io.*;
import java.util.*;

public class Main {

    // https://www.acmicpc.net/problem/14575

    private static boolean check(List<int[]> list, int s, long target) {
        long leftBound = 0;
        long rightBound = 0;

        for (int[] item : list) {
            if (s < item[0]) {
                return false;
            }

            if (item[1] < s) {
                leftBound += item[1];
                rightBound += item[1];
            } else {
                leftBound += item[0];
                rightBound += s;
            }
        }

        return leftBound <= target && target <= rightBound;
    }


    public static void problemSolver() throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        String[] strings = br.readLine().split(" ");

        int n = Integer.parseInt(strings[0]);
        int target = Integer.parseInt(strings[1]);
        List<int[]> list = new ArrayList<>(n);

        int left = Integer.MAX_VALUE;
        int right = Integer.MIN_VALUE;

        for (int i = 0; i < n; i++) {
            String[] localInput = br.readLine().split(" ");

            int sp = Integer.parseInt(localInput[0]);
            int ep = Integer.parseInt(localInput[1]);

            if (left > sp) {
                left = sp;
            }

            if (right < ep) {
                right = ep;
            }

            list.add(new int[]{sp, ep});
        }

        int result = -1;
        while (left <= right) {
            int mid = (left + right) / 2;

            if (check(list, mid, target)) {
                result = mid;
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }

        bw.write(Integer.toString(result));

        bw.flush();
        br.close();
        bw.close();
    }

    public static void main(String[] args) throws IOException {
        problemSolver();
    }
}